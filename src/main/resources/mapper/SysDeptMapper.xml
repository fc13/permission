<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.dao.SysDeptMapper">
  <resultMap id="BaseResultMap" type="com.example.model.SysDept">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="level" jdbcType="VARCHAR" property="level" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="seq" jdbcType="INTEGER" property="seq" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
    <result column="operate_time" jdbcType="TIMESTAMP" property="operateTime" />
    <result column="operate_ip" jdbcType="VARCHAR" property="operateIp" />
  </resultMap>
  <sql id="Base_Column_List">
    id,name,parent_id,level,seq,remark,operator,operate_time,operate_ip
  </sql>
  <insert id="insert" parameterType="com.example.model.SysDept" >
    insert into sys_dept (id, name, parent_id,
    level, seq, remark,
    operator, operate_time, operate_ip
    )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER},
    #{level,jdbcType=VARCHAR}, #{seq,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR},
    #{operator,jdbcType=VARCHAR}, #{operateTime,jdbcType=TIMESTAMP}, #{operateIp,jdbcType=VARCHAR}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.example.model.SysDept" keyProperty="id" useGeneratedKeys="true">
    insert into sys_dept
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="seq != null" >
        seq,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="operator != null" >
        operator,
      </if>
      <if test="operateTime != null" >
        operate_time,
      </if>
      <if test="operateIp != null" >
        operate_ip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        #{level,jdbcType=VARCHAR},
      </if>
      <if test="seq != null" >
        #{seq,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="operator != null" >
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="operateTime != null" >
        #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operateIp != null" >
        #{operateIp,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    DELETE FROM sys_dept
    WHERE id = #{id,jdbcType=INTEGER}
  </delete>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.model.SysDept" >
    UPDATE sys_dept
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=VARCHAR},
      </if>
      <if test="seq != null" >
        seq = #{seq,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="operator != null" >
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="operateTime != null" >
        operate_time = #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operateIp != null" >
        operate_ip = #{operateIp,jdbcType=VARCHAR},
      </if>
    </set>
    WHERE id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.model.SysDept" >
    UPDATE sys_dept
    SET name = #{name,jdbcType=VARCHAR},
    parent_id = #{parentId,jdbcType=INTEGER},
    level = #{level,jdbcType=VARCHAR},
    seq = #{seq,jdbcType=INTEGER},
    remark = #{remark,jdbcType=VARCHAR},
    operator = #{operator,jdbcType=VARCHAR},
    operate_time = #{operateTime,jdbcType=TIMESTAMP},
    operate_ip = #{operateIp,jdbcType=VARCHAR}
    WHERE id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByPrimaryKey" parameterType="int" resultMap="BaseResultMap">
    SELECT * FROM  sys_dept WHERE  id = #{id}
  </select>

  <select id="queryAllDept" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List" /> FROM sys_dept
  </select>

  <select id="getChildDeptListByLevel" parameterType="string" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List"/> FROM sys_dept
    WHERE level LIKE #{level} || '.%'
  </select>

  <update id="batchUpdateLevel" parameterType="map">
    <foreach collection="deptList" item="dept" separator=";">
      UPDATE sys_dept SET level = #{dept.level} WHERE id = #{dept.id}
    </foreach>
  </update>

  <select id="countByNameAndParentId" parameterType="map" resultType="int">
    SELECT  count(1) FROM sys_dept WHERE parent_id = #{parentId} AND name = #{name}
    <if test="id!=null">
      AND id != #{id}
    </if>
  </select>
  <select id="countByParentId" parameterType="int" resultType="int">
    SELECT count(1)
    FROM sys_dept
    WHERE parent_id = #{parentId}
  </select>
</mapper>